# This is a sample configuration file. You can generate your configuration
# with the `bundle exec rails mastodon:setup` interactive setup wizard, but to customize
# your setup even further, you'll need to edit it manually. This sample does
# not demonstrate all available configuration options. Please look at
# https://docs.joinmastodon.org/admin/config/ for the full documentation.

# Note that this file accepts slightly different syntax depending on whether
# you are using `docker-compose` or not. In particular, if you use
# `docker-compose`, the value of each declared variable will be taken verbatim,
# including surrounding quotes.
# See: https://github.com/mastodon/mastodon/issues/16895

# Federation
# ----------
# This identifies your server and cannot be changed safely later
# ----------
LOCAL_DOMAIN={{ inventory_hostname }}

# Redis
# -----
REDIS_HOST=redis
REDIS_PORT=6379

# PostgreSQL
# ----------
DB_HOST={{ mastodon_postgresql_container_name }}
DB_USER={{ mastodon_postgresql_database }}
DB_NAME={{ mastodon_postgresql_user }}
DB_PASS=WeUseTrust#https://www.postgresql.org/docs/current/auth-trust.html
DB_PORT={{ mastodon_postgresql_port | default('5432') }}

# Elasticsearch (optional)
# ------------------------
ES_ENABLED=true
ES_HOST=localhost
ES_PORT=9200
# Authentication for ES (optional)
ES_USER=elastic
ES_PASS=password

# Secrets
# -------
# Make sure to use `bundle exec rails secret` to generate secrets
# -------
SECRET_KEY_BASE={{ _secrets.secret_key_base }}
OTP_SECRET={{ _secrets.opt_secret }}

# Web Push
# --------
# Generate with `bundle exec rails mastodon:webpush:generate_vapid_key`
# --------
VAPID_PRIVATE_KEY={{ _secrets.vapid_private_key }}
VAPID_PUBLIC_KEY={{ _secrets.vapid_public_key }}

# Sending mail
# ------------
SMTP_SERVER={{ _secrets.smtp_server }}
SMTP_PORT={{ _secrets.smtp_port }}
SMTP_LOGIN={{ _secrets.smtp_login }}
SMTP_PASSWORD={{ _secrets.smtp_password }}
SMTP_FROM_ADDRESS={{ _secrets.smtp_from_address }}

# File storage (optional)
# -----------------------
S3_ENABLED=true
S3_BUCKET=files.example.com
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
S3_ALIAS_HOST=files.example.com

# IP and session retention
# -----------------------
# Make sure to modify the scheduling of ip_cleanup_scheduler in config/sidekiq.yml
# to be less than daily if you lower IP_RETENTION_PERIOD below two days (172800).
# -----------------------
IP_RETENTION_PERIOD=31556952
SESSION_RETENTION_PERIOD=31556952
