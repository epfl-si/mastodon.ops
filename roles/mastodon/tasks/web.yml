- name: Mastodon web directories
  ansible.builtin.file:
    state: directory
    recurse: yes
    path: "{{ item }}"
  with_items:
    - "{{ mastodon_web_dir }}/public/system"

- name: Mastodon web container
  community.docker.docker_container:
    name: "{{ mastodon_web_container_name }}"
    image: "{{ mastodon_web_image }}"
    restart: true
    ports:
      - "3000:3000"
    networks:
      - name: "{{ mastodon_docker_external_network_name }}"
      - name: "{{ mastodon_docker_internal_network_name }}"
    volumes:
      - "{{ mastodon_web_dir }}/public/system:/mastodon/public/system"
    env: "{{ mastodon_env }}"
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    command: 'bundle exec puma -C config/puma.rb'
  tags:
    - mastodon.web.run

- name: Mastodon streaming container
  community.docker.docker_container:
    name: "{{ mastodon_streaming_container_name }}"
    image: "{{ mastodon_web_image }}"
    restart: true
    ports:
      - "4000:4000"
    networks:
      - name: "{{ mastodon_docker_external_network_name }}"
      - name: "{{ mastodon_docker_internal_network_name }}"
    env: "{{ mastodon_env }}"
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    command: 'node ./streaming'
  tags:
    - mastodon.streaming.run

- name: Mastodon sidekiq container
  community.docker.docker_container:
    name: "{{ mastodon_sidekiq_container_name }}"
    image: "{{ mastodon_web_image }}"
    restart: true
    networks:
      - name: "{{ mastodon_docker_external_network_name }}"
      - name: "{{ mastodon_docker_internal_network_name }}"
    volumes:
      - "{{ mastodon_web_dir }}/public/system:/mastodon/public/system"
    env: "{{ mastodon_env }}"
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    command: 'bundle exec sidekiq'
  tags:
    - mastodon.sidekiq.run
