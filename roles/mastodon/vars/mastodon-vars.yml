# General
mastodon_dir: /srv/mastodon

mastodon_docker_internal_network_name: mastodon-internal
mastodon_docker_external_network_name: mastodon-external

_secrets: "{{ lookup('pipe', 'keybase fs read /keybase/team/epfl_mastodon/mastodon-secrets_' + inventory_mode + '.yml') | from_yaml }}"

# Redis
mastodon_redis_dir: "{{ mastodon_dir }}/redis"
mastodon_redis_image: redis:7-alpine
mastodon_redis_container_name: mastodon-redis

# PostgreSQL
mastodon_postgresql_dir: "{{ mastodon_dir }}/postgres14"
mastodon_postgresql_container_name: mastodon-postgresql

mastodon_postgresql_database: mastodon
mastodon_postgresql_user: mastodon
mastodon_postgresql_port: 5432
mastodon_postgresql_password: NotNeededBecauseWeUseTrust  #https://www.postgresql.org/docs/current/auth-trust.html

# Web
mastodon_web_dir: "{{ mastodon_dir }}/web"
mastodon_web_container_name: mastodon-web
mastodon_streaming_container_name: mastodon-streaming
mastodon_sidekiq_container_name: mastodon-sidekiq

mastodon_env:
  # Federation
  # ----------
  # This identifies your server and cannot be changed safely later
  LOCAL_DOMAIN: "{{ inventory_hostname }}"
  # Redis
  # -----
  REDIS_HOST: "{{ mastodon_redis_container_name }}"
  REDIS_PORT: "{{ mastodon_redis_port | default('6379') }}"

  # PostgreSQL
  # ----------
  DB_HOST: "{{ mastodon_postgresql_container_name }}"
  DB_NAME: "{{ mastodon_postgresql_database }}"
  DB_USER: "{{ mastodon_postgresql_user }}"
  DB_PASS: "{{ mastodon_postgresql_password }}"
  DB_PORT: "{{ mastodon_postgresql_port | default('5432') }}"

  # Elasticsearch (optional)
  # ------------------------
  # ES_ENABLED: "true"
  # ES_HOST: localhost
  # ES_PORT: "9200"
  # # Authentication for ES (optional)
  # ES_USER: elastic
  # ES_PASS: password

  # Secrets
  # -------
  # Make sure to use `bundle exec rails secret` to generate secrets
  #      docker compose run --rm web bundle exec rails secret
  # -------
  SECRET_KEY_BASE: "{{ _secrets.secret_key_base }}"
  OTP_SECRET: "{{ _secrets.opt_secret }}"

  # Web Push
  # --------
  # Generate with `bundle exec rails mastodon:webpush:generate_vapid_key`
  # --------
  VAPID_PRIVATE_KEY: "{{ _secrets.vapid_private_key }}"
  VAPID_PUBLIC_KEY: "{{ _secrets.vapid_public_key }}"

  # Sending mail
  # Note: it uses https://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration
  # ------------
  SMTP_SERVER: "{{ _secrets.smtp_server }}"
  SMTP_PORT: "{{ _secrets.smtp_port }}"
  SMTP_LOGIN: "{{ _secrets.smtp_login }}"
  SMTP_PASSWORD: "{{ _secrets.smtp_password }}"
  SMTP_FROM_ADDRESS: "{{ _secrets.smtp_from_address }}"
  SMTP_AUTH_METHOD: "login"
  SMTP_ENABLE_STARTTLS: "true"

  # File storage (optional)
  # -----------------------
  # S3_ENABLED: "true"
  # S3_BUCKET: "files.example.com"
  # AWS_ACCESS_KEY_ID: ""
  # AWS_SECRET_ACCESS_KEY: ""
  # S3_ALIAS_HOST: "files.example.com"

  # IP and session retention
  # -----------------------
  # Make sure to modify the scheduling of ip_cleanup_scheduler in config/sidekiq.yml
  # to be less than daily if you lower IP_RETENTION_PERIOD below two days (172800).
  # -----------------------
  IP_RETENTION_PERIOD: "31556952"
  SESSION_RETENTION_PERIOD: "31556952"
